From dc29334139966aa9a0224fb98feb395294e065f2 Mon Sep 17 00:00:00 2001
From: Chris Duryee <cduryee@redhat.com>
Date: Wed, 14 Jan 2015 21:32:29 +0000
Subject: [PATCH] Add additional string to check for when connecting to qpid

When we connect to qpid, we need to ensure that we skip to the next SASL
mechanism if the current mechanism fails. Otherwise, we will keep retrying the
connection with a non-working mech.

This patch adds an additional string that is returned when PLAIN is not
available, but python-saslwrapper is installed.

Conflicts:
        kombu/tests/transport/test_qpid.py
        kombu/transport/qpid.py
---
 kombu/tests/transport/test_qpid.py | 29 ++++++++++++++++++++++++++++-
 kombu/transport/qpid.py            |  8 +++++++-
 2 files changed, 35 insertions(+), 2 deletions(-)

diff --git a/kombu/tests/transport/test_qpid.py b/kombu/tests/transport/test_qpid.py
index 390e09c..fb338f9 100644
--- a/kombu/tests/transport/test_qpid.py
+++ b/kombu/tests/transport/test_qpid.py
@@ -373,7 +373,34 @@ class TestConnectionInit(ExtraAssertionsMixin, ConnectionTestBase):
     @patch(QPID_MODULE + '.ConnectionError', new=(MockException, ))
     @patch(QPID_MODULE + '.sys.exc_info')
     @patch(QPID_MODULE + '.qpid')
-    def test__init_mutates_ConnError_by_code(self, mock_qpid, mock_exc_info):
+    def test_connection__init__mutates_ConnError_by_message2(self, mock_qpid,
+                                                            mock_exc_info):
+        """
+        Test for PLAIN connection via python-saslwrapper, sans cyrus-sasl-plain
+
+        This test is specific for what is returned when we attempt to connect
+        with PLAIN mech and python-saslwrapper is installed, but cyrus-sasl-plain is
+        not installed.
+        """
+        my_conn_error = MockException()
+        my_conn_error.text = 'Error in sasl_client_start (-4) SASL(-4): no mechanism available'
+        mock_qpid.messaging.Connection.establish.side_effect = my_conn_error
+        mock_exc_info.return_value = ('a', 'b', None)
+        try:
+            self.conn = Connection(**self.connection_options)
+        except AuthenticationFailure as error:
+            exc_info = sys.exc_info()
+            self.assertTrue(not isinstance(error, MockException))
+            self.assertTrue(exc_info[1] is 'b')
+            self.assertTrue(exc_info[2] is None)
+        else:
+            self.fail('ConnectionError type was not mutated correctly')
+
+    @patch(QPID_MODULE + '.ConnectionError', new=(MockException, ))
+    @patch(QPID_MODULE + '.sys.exc_info')
+    @patch(QPID_MODULE + '.qpid')
+    def test_connection__init__mutates_ConnError_by_code(self, mock_qpid,
+                                                         mock_exc_info):
         my_conn_error = MockException()
         my_conn_error.code = 320
         my_conn_error.text = 'someothertext'
diff --git a/kombu/transport/qpid.py b/kombu/transport/qpid.py
index 474fe73..acf7807 100644
--- a/kombu/transport/qpid.py
+++ b/kombu/transport/qpid.py
@@ -1274,14 +1274,20 @@ class Connection(object):
                 )
                 break
             except ConnectionError as conn_exc:
+                # if we get one of these errors, do not raise an exception.
+                # Raising will cause the connection to be retried. Instead,
+                # just continue on to the next mech.
                 coded_as_auth_failure = getattr(conn_exc, 'code', None) == 320
                 contains_auth_fail_text = \
                     'Authentication failed' in conn_exc.text
                 contains_mech_fail_text = \
                     'sasl negotiation failed: no mechanism agreed' \
                     in conn_exc.text
+                contains_mech_unavail_text = 'no mechanism available' \
+                    in conn_exc.text
                 if coded_as_auth_failure or \
-                        contains_auth_fail_text or contains_mech_fail_text:
+                        contains_auth_fail_text or contains_mech_fail_text or \
+                        contains_mech_unavail_text:
                     logger.debug(
                         'Unable to connect to qpid with SASL mechanism %s',
                         sasl_mech,
-- 
2.1.0

